
<div class="flex justify-center items-center p-6 min-h-screen">
<div class="relative" phx-window-keydown="keypress">
  <% user_player_data = user_player_data!(@game, @user_id)%>
  <% user_status = Map.fetch!(user_player_data, :status) %>
  <%= case {@game.status, user_status} do %>
    <% {:players_joining, _} -> %>
        <.modal_simple id="players_joining_not_ready_modal" show>
            <%= cond do %>
                <% num_players_in_game(@game) < 2 -> %>
                    <b>Waiting for more players to join...</b>
                <% user_status == :not_ready -> %>
                    <div class="flex flex-col items-center gap-5">
                        <b>Waiting for all players to be ready...</b>
                        <.button_primary phx-click="player-ready" phx-value-user-id={@user_id}>I'm ready!</.button_primary>
                    </div>

                <% true -> %>
                    <div class="flex flex-col items-center gap-5">
                        <b>Waiting for all players to be ready...</b>
                        <.button_secondary phx-click="player-not-ready" phx-value-user-id={@user_id}>I changed my mind, I'm not ready</.button_secondary>
                    </div>
            <% end %>
        </.modal_simple>
    <% {_, :dead} -> %>
        <.modal_simple  id="finished_dead_modal" show>
            <div class="flex flex-col gap-2 items-center text-center">
                <b>You did not win - better luck next time</b><br/>
                Press back button to retreat to the lobby.
                <.button_secondary phx-click="exit-game">Exit game</.button_secondary>
            </div>
        </.modal_simple>
    <% {:finished, :ready} -> %>
        <.modal_simple id="finished_ready_modal" show>
            <div class="flex flex-col gap-2 items-center text-center">
                <b>WINNER!!</b><br/>
                Yes, you are amazing.<br/>
                Press back button to return to the lobby with your head held high.
                <.button_secondary phx-click="exit-game">Exit game</.button_secondary>
            </div>
        </.modal_simple>
    <% _ -> %>
  <% end %>

    <div class="grid grid-cols-11 gap-1 aspect-video">
        <!-- Display other users's boards -->
        <div class="col-span-3 hidden lg:block">
            <BoardComponents.multiplayer_tiled_playfields player_states={even_opponents_player_data(@game.players, @user_id)}/>
        </div>

        <!-- Display current user's boards -->
        <div class="col-span-full md:col-span-9 md:col-start-2 lg:col-span-5">
            <%= with %{board_preview: board_preview, lines_cleared: lines_cleared, status: status} <- user_player_data do %>
                <div class="relative flex flex-col items-center bg-white/25 backdrop-blur-md border border-white/30 pt-6 pb-8 px-8 rounded-2xl w-fit shadow-2xl">
                  <.live_component module={Audio} id="multiplayer-game-audio" class="absolute inset-x-4 w-8 md:w-10"/>

                  <div class="bg-emerald-400/20 border border-emerald-300/40 p-3 rounded-xl text-white text-sm font-semibold shadow-lg mb-4">
                    <b>Opponents remaining: <%= num_alive_opponents(@game) - 1 %></b>
                  </div>

                    <div class="grid grid-cols-10 gap-3 content-center">
                        <BoardComponents.hold_tile_box board={board_preview} class="col-span-2"/>
                        <BoardComponents.playfield board={board_preview} class="col-span-6" is_dead={status == :dead}/>
                        <BoardComponents.next_tile_box board={board_preview} class="col-span-2"/>
                    </div>
                </div>
            <% end %>
        </div>

        <!-- Display other users's boards -->
        <div class="col-span-3 hidden lg:block">
            <BoardComponents.multiplayer_tiled_playfields player_states={odd_opponents_player_data(@game.players, @user_id)}/>
        </div>
    </div>

  <div class="absolute inset-x-0 bottom-0 opacity-20 md:hidden">
    <Controls.mobile_controls
      on_hold={JS.push("hold")}
      on_rotate={JS.push("rotate")}
      on_left={JS.push("left")}
      on_right={JS.push("right")}
      on_down={JS.push("down")}
      on_drop={JS.push("drop")}
    />
  </div>
</div>
</div>

